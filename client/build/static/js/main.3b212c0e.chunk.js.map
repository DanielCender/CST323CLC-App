{"version":3,"sources":["pages/Home.js","pages/About.js","pages/Posts.js","helpers/db/listAllPosts.js","pages/Login.js","helpers/db/loginUser.js","pages/Register.js","helpers/db/registerUser.js","components/Editor.js","helpers/db/getPost.js","pages/Post.js","pages/Account.js","helpers/db/updateUser.js","pages/Logout.js","pages/PostManagement.js","helpers/db/listPostsByUser.js","pages/EditPost.js","App.js","reportWebVitals.js","index.js"],"names":["Home","history","useHistory","useState","showToast","setShowToast","toggleShowToast","Jumbotron","className","style","height","Row","Col","maxWidth","Button","block","size","variant","type","onClick","window","localStorage","getItem","push","width","display","justifyContent","alignItems","borderTop","Toast","show","onClose","position","right","bottom","Header","src","alt","Body","About","Container","fluid","Posts","posts","setPosts","errMsg","setErrMsg","useEffect","requestOptions","method","headers","Promise","res","rej","fetch","then","response","a","json","ok","Error","message","data","catch","e","listAllPosts","console","log","map","el","to","ID","Title","Login","email","password","values","setValues","loginResult","setLoginResult","useLayoutEffect","setTimeout","handleChange","event","prev","target","name","value","Form","onSubmit","preventDefault","body","JSON","stringify","loginUser","_","setItem","user","alert","validated","Group","controlId","Label","Control","onChange","placeholder","required","Register","firstName","lastName","registrationResult","setRegistrationResult","bcrypt","genSalt","err","salt","hash","registerUser","PostEditor","readOnly","saveHandler","EditorState","createEmpty","editorState","setEditorState","saveContent","content","convertToRaw","onChangeState","newState","contentState","getCurrentContent","createWithContent","convertFromRaw","parse","color","padding","customStyleMap","backgroundColor","getPost","id","Post","useParams","post","setPost","Content","Account","Email","oldPassword","updateResult","setUpdateResult","updateUser","Logout","count","setCount","removeItem","PostManagement","listPostsByUser","flexDirection","EditPost","undefined","App","authed","setAuthed","Navbar","collapseOnSelect","bg","expand","Brand","href","Nav","Item","Link","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b212c0e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Jumbotron, Button, Row, Col, Toast } from 'react-bootstrap';\n\nexport const Home = () => {\n  const history = useHistory()\n\n  const [showToast, setShowToast] = useState(false)\n  const toggleShowToast = () => setShowToast(!showToast)\n\n  const handleRegister = () => {\n    if(window.localStorage.getItem(\"USER\")) toggleShowToast()\n    else history.push('/register')\n  }\n  const handleLogin = () => {\n    if(window.localStorage.getItem(\"USER\")) toggleShowToast()\n    else history.push('/login')\n  }\n\n  return (\n    <Jumbotron className='ml-0 mr-0 pr-0 pl-0' style={{ height: '100%' }}>\n      <h1 className='d-block justify-content-center text-center'>\n        Read interesting things,\n        <br />\n        even if you don't want to.\n      </h1>\n      <Row className='d-flex justify-content-center align-items-center pt-4'>\n        <Col style={{ maxWidth: '350px' }}>\n            <Button block size='lg' variant='warning' type='button' className='text-light' onClick={handleRegister}>\n              CREATE ACCOUNT\n            </Button>\n        </Col>\n      </Row>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark mt-4 pt-4'\n      >\n        <Row className='d-flex justify-content-center align-items-center' style={{ width: '100%' }}>\n          <Col style={{ maxWidth: '350px' }}>\n              <Button block size='lg' variant='warning' type='button' className='text-light' onClick={handleLogin}>\n                LOGIN\n              </Button>\n          </Col>\n        </Row>\n         <Toast show={showToast} onClose={toggleShowToast} style={{position: 'absolute', right: '30px', bottom: '30px'}}>\n          <Toast.Header>\n            <img\n              src=\"holder.js/20x20?text=%20\"\n              className=\"rounded mr-2\"\n              alt=\"\"\n            />\n            <strong className=\"mr-auto\">Notice</strong>\n          </Toast.Header>\n          <Toast.Body>You're already logged in, check out some posts!</Toast.Body>\n        </Toast>\n      </div>\n    </Jumbotron>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport const About = () => {\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>ABOUT</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n        <Row className='d-flex justify-content-center'>\n          <Col className='col-4'>\n            <p className='text-light'>\n              Leverage agile frameworks to provide a robust synopsis for high level overviews.\n              Iterative approaches to corporate strategy foster collaborative thinking to further\n              the overall value proposition. Organically grow the holistic world view of disruptive\n              innovation via workplace diversity and empowerment. Bring to the table win-win\n              survival strategies to ensure proactive domination. At the end of the day, going\n              forward, a new normal that has evolved from generation X is on the runway heading\n              towards a streamlined cloud solution. User generated content in real-time will have\n              multiple touchpoints for offshoring. Capitalize on low hanging fruit to identify a\n              ballpark value added activity to beta test. Override the digital divide with\n              additional clickthroughs from DevOps. Nanotechnology immersion along the information\n              highway will close the loop on focusing solely on the bottom line.\n            </p>\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n};\n\nexport default About;\n","import { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Toast } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// Helpers\nimport { listAllPosts } from './../helpers/db/listAllPosts';\n\nexport const Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [errMsg, setErrMsg] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  const toggleShowToast = () => setShowToast(!showToast);\n\n  useEffect(() => {\n    listAllPosts()\n      .then((res) => {\n        console.log('setting posts: ', res);\n        setPosts(res);\n      })\n      .catch((e) => {\n        setErrMsg(e.message);\n      });\n  }, []);\n\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>POST FEED</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n        {posts.map((el) => {\n          return (\n            <Row key={el.ID}>\n              <Col>\n                <Link to={`/post/${el.ID}`}>\n                  <Button variant='warning' type='button' size='lg'>\n                    {el.Title}\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          );\n        })}\n        <Toast\n          show={showToast}\n          onClose={toggleShowToast}\n          style={{ position: 'absolute', right: '30px', bottom: '30px' }}\n        >\n          <Toast.Header>\n            <img src='holder.js/20x20?text=%20' className='rounded mr-2' alt='' />\n            <strong className='mr-auto'>Error</strong>\n          </Toast.Header>\n          <Toast.Body>{errMsg}</Toast.Body>\n        </Toast>\n      </div>\n    </Container>\n  );\n};\n\nexport default Posts;\n","export const listAllPosts = () => {\n  // Simple POST request with a JSON body using fetch\n  const requestOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return new Promise((res, rej) =>\n    fetch('/api/posts', requestOptions)\n      .then(async (response) => {\n        const res = await response.json();\n        if (!response.ok) throw new Error(res.message);\n        return res;\n      })\n      .then((data) => res(data))\n      .catch((e) => rej(e))\n  );\n};\n","import { useState, useEffect, useLayoutEffect } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n// Helpers\nimport { loginUser } from '../helpers/db/loginUser';\n\nexport const Login = () => {\n  const history = useHistory();\n  const [values, setValues] = useState({ email: '', password: '' });\n  const [loginResult, setLoginResult] = useState(null);\n\n  // Before first render, double-check if user is already logged in\n  useLayoutEffect(() => {\n    if (window.localStorage.getItem('USER')) history.push('/');\n  }, []);\n\n  // This effect will see changes after a successful login attempt,\n  //  and handle the redirect for us\n  useEffect(() => {\n    if (loginResult) setTimeout(() => history.push('/'), 2000);\n  }, [loginResult]);\n\n  // General form handler\n  const handleChange = (event) => {\n    // Set all new values, including prior untouched ones\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Store hash in your password DB.\n    loginUser({ ...values, password: values.password })\n      .then((_) => {\n        window.localStorage.setItem('USER', JSON.stringify(_.user));\n        setLoginResult(true);\n      })\n      .catch((e) => {\n        console.log('error in login: ', e.message);\n        setLoginResult(false);\n        alert('There was an error with the login attempt: ' + e.message);\n      });\n  };\n\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>LOGIN</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n        <Form onSubmit={handleSubmit} validated={!!loginResult}>\n          <Row>\n            <Col>\n              <Form.Group controlId='formGroupEmail'>\n                <Form.Label className='text-light'>EMAIL</Form.Label>\n                <Form.Control\n                  type='email'\n                  name='email'\n                  value={values.email}\n                  onChange={handleChange}\n                  placeholder='name@gmail.com'\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId='formGroupPassword'>\n                <Form.Label className='text-light'>PASSWORD</Form.Label>\n                <Form.Control\n                  type='password'\n                  name='password'\n                  value={values.password}\n                  onChange={handleChange}\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className='justify-content-center d-flex'>\n            <Col className='justify-content-center d-flex'>\n              <Button variant='warning' type='submit' value='Submit' className='text-light'>\n                LOGIN\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\n","export const loginUser = ({ email, password } = {}) => {\n  // Simple POST request with a JSON body using fetch\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, password }),\n  };\n  return new Promise((res, rej) =>\n    fetch('/api/user/auth', requestOptions)\n      .then(async (response) => {\n        const res = await response.json();\n        if (!response.ok) throw new Error(res.message);\n        return res;\n      })\n      .then((data) => res(data))\n      .catch((e) => rej(e))\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport bcrypt from 'bcryptjs'\n\n// Helpers\nimport { registerUser } from '../helpers/db/registerUser'\n\nexport const Register = () => {\n    const history = useHistory()\nconst [values, setValues] = useState({ firstName: '', lastName: '', email: '', password: '' });\nconst [registrationResult, setRegistrationResult] = useState(null)\n\n    // This effect will see changes after a successful account creation,\n    //  and handle the redirect for us\n    useEffect(() => {\n        if(registrationResult) setTimeout(() => history.push('/login'), 2000)\n    }, [registrationResult])\n\n\n  /**\n   * Handles form input\n   * @param {} event \n   */\n  // General form handler\n  const handleChange = (event) => {\n    // Set all new values, including prior untouched ones\n    setValues(prev => ({ ...prev, [event.target.name]: event.target.value }));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    bcrypt.genSalt(10, function(err, salt) {\n        console.log('salt: ', salt)\n        console.log('pass: ', values.password);\n    bcrypt.hash(values.password, salt, function(err, hash) {\n        // Store hash in your password DB.\n        registerUser({ ...values, password: hash }).then(_ => {\n            // setRegistrationResult(true)\n        }).catch(e => {\n            console.log('error in registration: ', e.message)\n            setRegistrationResult(false)\n            alert('There was an error with the registration: ' + e.message)\n        })\n    });\n});\n  }\n\n    return (\n      <Container fluid className='p-0 m-0' style={{width: '100%', height: '100%'}}>\n        <div\n          style={{\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n          }}\n          className='bg-dark-gray'\n        >\n          <h1>CREATE USER</h1>\n        </div>\n        <div\n          style={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n            borderTop: '15px solid #A0A09F',\n          }}\n          className='bg-dark pt-4 pb-4'\n        >\n          <Form onSubmit={handleSubmit} validated={!!registrationResult}>\n            <Row>\n              <Col>\n                <Form.Group controlId='formGroupFirstName'>\n                  <Form.Label className='text-light'>FIRST NAME</Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='firstName'\n                    value={values.firstName}\n                    onChange={handleChange}\n                    placeholder='John'\n                    required={true}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId='formGroupEmail'>\n                  <Form.Label className='text-light'>EMAIL</Form.Label>\n                  <Form.Control\n                    type='email'\n                    name='email'\n                    value={values.email}\n                    onChange={handleChange}\n                    placeholder='name@gmail.com'\n                    required={true}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Group controlId='formGroupLastName'>\n                  <Form.Label className='text-light'>LAST NAME</Form.Label>\n                  <Form.Control\n                    type='text'\n                    name='lastName'\n                    value={values.lastName}\n                    onChange={handleChange}\n                    placeholder='Smith'\n                    required={true}\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group controlId='formGroupPassword'>\n                  <Form.Label className='text-light'>PASSWORD</Form.Label>\n                  <Form.Control\n                    type='password'\n                    name='password'\n                    value={values.password}\n                    onChange={handleChange}\n                    placeholder='Smith'\n                    required={true}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-center d-flex\">\n                <Col className=\"justify-content-center d-flex\">\n                <Button variant=\"warning\" type='submit' value='Submit' className=\"text-light\">\n                    REGISTER\n                </Button>\n                </Col>\n            </Row>\n            </Form>\n        </div>\n      </Container>\n    );\n}\n\nexport default Register;\n","export const registerUser = ({ firstName, lastName, email, password } = {}) => {\n  // Simple POST request with a JSON body using fetch\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ firstName, lastName, email, password }),\n  };\n  return new Promise((res, rej) =>\n    fetch('/api/user/create', requestOptions)\n      .then(async (response) => {\n        const res = await response.json();\n        if (!response.ok) throw new Error(res.message);\n        return res;\n      })\n      .then((data) => res(data))\n      .catch((e) => rej(e))\n  );\n};\n","import React, { useState } from 'react';\nimport { Editor, EditorState, convertToRaw, convertFromRaw } from 'draft-js';\nimport { useEffect, useLayoutEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport 'draft-js/dist/Draft.css';\n\nconst PostEditor = ({ data = null, readOnly = false, saveHandler = () => null } = {}) => {\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n\n  const saveContent = (content) => {\n    window.localStorage.setItem('content', JSON.stringify(convertToRaw(content)));\n  };\n\n  const onChangeState = (newState) => {\n    const contentState = editorState.getCurrentContent();\n    saveContent(contentState);\n    console.log('content state', convertToRaw(contentState));\n    setEditorState(newState);\n  };\n\n  useEffect(() => {\n    // const content = window.localStorage.getItem('content');\n\n    if (data) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(JSON.parse(data))));\n    } else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, [data]);\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'block',\n          // backgroundColor: 'whitesmoke',\n          color: 'white',\n          width: '600px',\n          height: '800px',\n          padding: '1rem',\n          // borderRadius: '5px',\n        }}\n      >\n        <Editor\n          readOnly={readOnly}\n          editorState={editorState}\n          onChange={onChangeState}\n          customStyleMap={{\n            backgroundColor: 'white',\n            color: 'white',\n          }}\n        />\n      </div>\n      {readOnly === false && (\n        <Button variant='info' className='text-light' onClick={saveHandler}>\n          SAVE POST\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default PostEditor;\n","export const getPost = ({ id } = {}) => {\n  // Simple GET request with a JSON body using fetch\n  const requestOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return new Promise((res, rej) =>\n    fetch(`/api/post/${id}`, requestOptions)\n      .then(async (response) => {\n        const res = await response.json();\n        if (!response.ok) throw new Error(res.message);\n        return res;\n      })\n      .then((data) => res(data))\n      .catch((e) => rej(e))\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Container, Row, Col, Button, Toast } from 'react-bootstrap';\n\n// UI Comps\nimport PostEditor from '../components/Editor';\n\n// Helpers\nimport { getPost } from './../helpers/db/getPost';\n\nexport const Post = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  const [post, setPost] = useState({});\n  const [errMsg, setErrMsg] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  const toggleShowToast = () => setShowToast(!showToast);\n\n  useEffect(() => {\n    getPost({ id })\n      .then((res) => {\n        console.log('setting post: ', res);\n        if (JSON.stringify(res) === JSON.stringify({})) {\n          // Go back, no post exists for this id\n          history.push('/posts');\n        }\n        setPost(res);\n      })\n      .catch((e) => {\n        setErrMsg(e.message);\n      });\n  }, []);\n\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>POST</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n        <h2>{post.Title}</h2>\n        {/** Render the DraftJS Editor (readonly) in here */}\n        <PostEditor readOnly={true} data={post.Content || null} />\n        <Toast\n          show={showToast}\n          onClose={toggleShowToast}\n          style={{ position: 'absolute', right: '30px', bottom: '30px' }}\n        >\n          <Toast.Header>\n            <img src='holder.js/20x20?text=%20' className='rounded mr-2' alt='' />\n            <strong className='mr-auto'>Error</strong>\n          </Toast.Header>\n          <Toast.Body>{errMsg}</Toast.Body>\n        </Toast>\n      </div>\n    </Container>\n  );\n};\n\nexport default Post;\n","import { useState, useEffect, useLayoutEffect } from 'react';\nimport { Container, Row, Col, Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport bcrypt from 'bcryptjs';\n\n// Helpers\nimport { updateUser } from '../helpers/db/updateUser';\n\nexport const Account = () => {\n  const history = useHistory();\n  const [values, setValues] = useState({\n    email: (JSON.parse(window.localStorage.getItem(\"USER\")) || {}).Email,\n    oldPassword: '',\n    password: '',\n  });\n  const [updateResult, setUpdateResult] = useState(null);\n\n  const handleEditPosts = () => history.push('/account/posts')\n\n  // If user is not logged in, redirect them\n  useLayoutEffect(() => {\n    if (!window.localStorage.getItem('USER')) history.push('/login');\n  }, []);\n\n  // This effect will see changes after a successful account creation,\n  //  and handle the redirect for us\n  useEffect(() => {\n    if (updateResult) setTimeout(() => history.push('/login'), 2000);\n  }, [updateResult]);\n\n  // General form handler\n  const handleChange = (event) => {\n    // Set all new values, including prior untouched ones\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    bcrypt.genSalt(10, function (err, salt) {\n      console.log('salt: ', salt);\n      console.log('pass: ', values.password);\n      bcrypt.hash(values.password, salt, function (err, hash) {\n        // Store hash in your password DB.\n        updateUser({ ...values, password: hash })\n          .then((_) => {\n            // setUpdateResult(true)\n          })\n          .catch((e) => {\n            console.log('error in update: ', e.message);\n            setUpdateResult(false);\n            alert('There was an error with the account update: ' + e.message);\n          });\n      });\n    });\n  };\n\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>ACCOUNT</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n         <Row className='d-flex justify-content-center align-items-center pt-4'>\n        <Col style={{ maxWidth: '350px' }}>\n            <Button block size='lg' variant='warning' type='button' className='text-light' onClick={handleEditPosts}>\n              WRITE OR EDIT POSTS\n            </Button>\n        </Col>\n      </Row>\n        <Form onSubmit={handleSubmit} validated={!!updateResult}>\n          {/* <Row>\n            <Col>\n              <Form.Group controlId='formGroupFirstName'>\n                <Form.Label className='text-light'>FIRST NAME</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='firstName'\n                  value={values.firstName}\n                  onChange={handleChange}\n                  placeholder='John'\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId='formGroupLastName'>\n                <Form.Label className='text-light'>LAST NAME</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='lastName'\n                  value={values.lastName}\n                  onChange={handleChange}\n                  placeholder='Smith'\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row> */}\n          <Row>\n            <Col>\n              <h3 className='text-light'>UPDATE PASSWORD</h3>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId='formGroupPassword'>\n                <Form.Label className='text-light'>OLD PASSWORD</Form.Label>\n                <Form.Control\n                  type='password'\n                  name='oldPassword'\n                  value={values.oldPassword}\n                  onChange={handleChange}\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId='formGroupPassword'>\n                <Form.Label className='text-light'>NEW PASSWORD</Form.Label>\n                <Form.Control\n                  type='password'\n                  name='password'\n                  value={values.password}\n                  onChange={handleChange}\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className='justify-content-center d-flex'>\n            <Col className='justify-content-center d-flex'>\n              <Button variant='warning' type='submit' value='Submit' className='text-light'>\n                UPDATE ACCOUNT\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Account;\n","export const updateUser = ({ email, oldPassword, password } = {}) => {\n  // Simple POST request with a JSON body using fetch\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ email, oldPassword, password }),\n  };\n  return new Promise((res, rej) =>\n    fetch('/api/user/update', requestOptions)\n      .then(async (response) => {\n        const res = await response.json();\n        if (!response.ok) throw new Error(res.message);\n        return res;\n      })\n      .then((data) => res(data))\n      .catch((e) => rej(e))\n  );\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useEffect, useState, useLayoutEffect } from 'react';\n\nexport const Logout = () => {\n  let history = useHistory();\n  const [count, setCount] = useState(3);\n\n  useLayoutEffect(() => {\n    window.localStorage.removeItem('USER');\n  }, []);\n\n  useEffect(() => {\n    if (count === 0) history.push('/');\n    setTimeout(() => setCount((prev) => prev - 1), 1000);\n  }, [count]);\n\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>REDIRECTING</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n        <Row>\n          <Col className='text-light'>Redirecting to Home in {count}...</Col>\n        </Row>\n      </div>\n    </Container>\n  );\n};\n\nexport default Logout;\n","import { useState, useEffect, useLayoutEffect } from 'react';\nimport { Container, Row, Col, Button, Toast } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\n\n// Helpers\nimport { listPostsByUser } from './../helpers/db/listPostsByUser';\n\nexport const PostManagement = () => {\n  const history = useHistory();\n  const [posts, setPosts] = useState([]);\n  const [errMsg, setErrMsg] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  const toggleShowToast = () => setShowToast(!showToast);\n\n  const handleCreatePost = () => history.push('/post/create');\n\n  // If user is not logged in, redirect them\n  useLayoutEffect(() => {\n    if (!window.localStorage.getItem('USER')) history.push('/login');\n  }, []);\n\n  useEffect(() => {\n    const email = (JSON.parse(window.localStorage.getItem('USER')) || {}).email;\n    listPostsByUser({ email })\n      .then((res) => {\n        setPosts(res);\n      })\n      .catch((e) => {\n        setErrMsg(e.message);\n      });\n  }, []);\n\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>MANAGE YOUR POSTS</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n        <Row className='d-flex justify-content-center align-items-center' style={{ width: '100%' }}>\n          <Col style={{ maxWidth: '350px' }}>\n            <Button\n              block\n              size='lg'\n              variant='warning'\n              type='button'\n              className='text-light'\n              onClick={handleCreatePost}\n            >\n              WRITE NEW POST\n            </Button>\n          </Col>\n        </Row>\n        <Row className='d-flex justify-content-center align-items-center' style={{ width: '100%' }}>\n          <Col style={{ maxWidth: '450px' }} className='m-0 p-0 pt-4'>\n            <h1 className='text-light m-0'>EDIT YOUR POSTS</h1>\n          </Col>\n        </Row>\n        {posts.map((el) => {\n          return (\n            <Row key={el.ID}>\n              <Col>\n                <Link to={`/post/${el.ID}`}>\n                  <Button variant='warning' type='button' size='lg'>\n                    {el.Title}\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n          );\n        })}\n        <Toast\n          show={showToast}\n          onClose={toggleShowToast}\n          style={{ position: 'absolute', right: '30px', bottom: '30px' }}\n        >\n          <Toast.Header>\n            <img src='holder.js/20x20?text=%20' className='rounded mr-2' alt='' />\n            <strong className='mr-auto'>Error</strong>\n          </Toast.Header>\n          <Toast.Body>{errMsg}</Toast.Body>\n        </Toast>\n      </div>\n    </Container>\n  );\n};\n\nexport default PostManagement;\n","export const listPostsByUser = ({ email } = {}) => {\n  // Simple POST request with a JSON body using fetch\n  const requestOptions = {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json' },\n  };\n  return new Promise((res, rej) =>\n    fetch(`/api/posts/${email}`, requestOptions)\n      .then(async (response) => {\n        const res = await response.json();\n        if (!response.ok) throw new Error(res.message);\n        return res;\n      })\n      .then((data) => res(data))\n      .catch((e) => rej(e))\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Container, Toast } from 'react-bootstrap';\n\n// UI Comps\nimport PostEditor from '../components/Editor';\n\n// Helpers\nimport { getPost } from './../helpers/db/getPost';\n\nexport const EditPost = () => {\n  const history = useHistory();\n  const { id } = useParams();\n  console.log('post id in editor: ', id);\n  const [post, setPost] = useState({});\n  const [errMsg, setErrMsg] = useState(null);\n  const [showToast, setShowToast] = useState(false);\n  const toggleShowToast = () => setShowToast(!showToast);\n\n  useEffect(() => {\n    if (id !== undefined) {\n      getPost({ id })\n        .then((res) => {\n          console.log('setting post: ', res);\n          if (JSON.stringify(res) === JSON.stringify({})) {\n            // Go back, no post exists for this id\n            history.push('/account/posts');\n          }\n          setPost(res);\n        })\n        .catch((e) => {\n          setErrMsg(e.message);\n        });\n    }\n  }, [id]);\n\n  return (\n    <Container fluid className='p-0 m-0' style={{ width: '100%', height: '100%' }}>\n      <div\n        style={{\n          width: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        }}\n        className='bg-dark-gray'\n      >\n        <h1>POST</h1>\n      </div>\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n          borderTop: '15px solid #A0A09F',\n        }}\n        className='bg-dark pt-4 pb-4'\n      >\n        <h2>{post.Title}</h2>\n        {/** Render the DraftJS Editor (readonly) in here */}\n        <PostEditor readOnly={true} data={post.Content || null} />\n        <Toast\n          show={showToast}\n          onClose={toggleShowToast}\n          style={{ position: 'absolute', right: '30px', bottom: '30px' }}\n        >\n          <Toast.Header>\n            <img src='holder.js/20x20?text=%20' className='rounded mr-2' alt='' />\n            <strong className='mr-auto'>Error</strong>\n          </Toast.Header>\n          <Toast.Body>{errMsg}</Toast.Body>\n        </Toast>\n      </div>\n    </Container>\n  );\n};\n\nexport default EditPost;\n","import { useLayoutEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n// Pages\nimport { Home, About, Posts, Login, Logout, Register, Account, Post, PostManagement, EditPost } from './pages';\n\nexport default function App() {\n  const [authed, setAuthed] = useState(false)\n  useLayoutEffect(() => {\n    if(window.localStorage.getItem('USER')) setAuthed(true)\n    else setAuthed(false)\n  }, [])\n\n  return (\n    <Router>\n      <Navbar collapseOnSelect bg='dark' expand='md' variant='dark'>\n        <Navbar.Brand href=\"/\" className='font-weight-bold text-muted' style={{width: '20%'}}>\n          The \"Blogs are Cool\" Blog\n        </Navbar.Brand>\n        <Nav className=\"justify-content-center flex-grow-1\" style={{width: '60%'}}>\n          <Nav.Item>\n            <LinkContainer to='/'>\n              <Nav.Link>HOME</Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n          <Nav.Item>\n            <LinkContainer to='/about'>\n              <Nav.Link>ABOUT</Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n          <Nav.Item>\n            <LinkContainer to='/posts'>\n              <Nav.Link>FEED</Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n          <Nav.Item>\n            <LinkContainer to='/account'>\n              <Nav.Link>ACCOUNT</Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n        </Nav>\n         <Nav className=\"justify-content-end\" style={{width: '20%'}}>\n          {authed && (<Nav.Item>\n            <LinkContainer to={'/account/posts'}>\n              <Nav.Link>WRITE</Nav.Link>\n            </LinkContainer>\n          </Nav.Item>)}\n          <Nav.Item>\n            <LinkContainer to={authed ? '/logout' : '/login'}>\n              <Nav.Link>{authed ? 'LOGOUT' : 'LOGIN'}</Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n          </Nav>\n      </Navbar>\n      {/* A <Switch> looks through its children <Route>s and\n    renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path='/about'>\n          <About />\n        </Route>\n        <Route path='/login'>\n          <Login />\n        </Route>\n        <Route path='/logout'>\n          <Logout />\n        </Route>\n        <Route path='/register'>\n          <Register />\n        </Route>\n        <Route exact path='/posts'>\n          <Posts />\n        </Route>\n        <Route exact path='/account'>\n          <Account />\n        </Route>\n        <Route path='/account/posts'>\n          <PostManagement />\n        </Route>\n        <Route path='/post/:id'>\n          <Post />\n        </Route>\n        <Route exact path='/post/create'>\n          <EditPost />\n        </Route>\n        <Route path='/post/edit/:id'>\n          <EditPost />\n        </Route>\n        <Route path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import 'draft-js/dist/Draft.css';\n\nSentry.init({\n  dsn: 'https://21c4f81678034a9b8dac570f302417f8@o487368.ingest.sentry.io/5546054',\n  integrations: [new Integrations.BrowserTracing()],\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}